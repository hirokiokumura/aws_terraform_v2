name: openid connect
on:
  push:
    branches:
      - main

env:
  ROLE_ARN: arn:aws:iam::${{ secrets.AWS_ID }}:role/${{ secrets.ROLE_NAME }}
  SESSION_NAME: gh-oidc-${{ github.run_id }}-${{ github.run_attempt }}
  IP_ADDRESS: ${{ secrets.IP_ADDRESS }}

jobs:
  connect:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.ROLE_ARN }}
          role-session-name: ${{ env.SESSION_NAME }}
          aws-region: ap-northeast-1

      - run: aws iam list-users

      - run: aws iam create-user --user-name invalid || true

      # ファイルをチェックアウト
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        # with:
        #   token: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/hashicorp/setup-terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      # - name: Terraform fmt
      #   id: fmt
      #   run: terraform fmt -check
      #   continue-on-error: true
      #   working-directory: terraform

      - name: Terraform fmt (check only)
        id: fmt-check
        run: terraform fmt -check
        continue-on-error: true
        working-directory: terraform

      - name: Terraform fmt (write if needed)
        if: steps.fmt-check.outcome == 'failure'
        run: terraform fmt
        working-directory: terraform

      - name: Commit & Push formatted files
        if: steps.fmt-check.outcome == 'failure'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          git fetch origin main

          git add terraform
          git commit -m "chore: auto-format terraform files"
          git push

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="ip_address=${IP_ADDRESS}"
        continue-on-error: true
        working-directory: terraform
        env:
          IP_ADDRESS: ${{ secrets.IP_ADDRESS }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="ip_address=${IP_ADDRESS}"
        working-directory: terraform
        env:
          IP_ADDRESS: ${{ secrets.IP_ADDRESS }}
